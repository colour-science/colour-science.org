<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>colour-science (vagrant)</title><link>http://colour-science.org/</link><description></description><atom:link href="http://colour-science.org/categories/vagrant.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 06 Dec 2015 09:56:43 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyCharm, Vagrant, Fabric &amp; Anaconda</title><link>http://colour-science.org/posts/pycharm-vagrant-fabric-anaconda/</link><dc:creator>Colour Developers</dc:creator><description>&lt;div&gt;&lt;p&gt;Installing the whole development toolchain for &lt;strong&gt;Colour&lt;/strong&gt; roughly means
deploying:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/download/releases/"&gt;Python 2.7&lt;/a&gt; and
&lt;a class="reference external" href="https://www.python.org/download/releases/"&gt;Python 3.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.numpy.org/"&gt;NumPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://matplotlib.org/"&gt;Matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.scipy.org/"&gt;SciPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ipython.org/notebook.html"&gt;IPython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://nose.readthedocs.org/en/latest"&gt;Nose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/coverage"&gt;Coverage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/flake8"&gt;Flake8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sphinx-doc.org"&gt;Sphinx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://httpd.apache.org"&gt;Apache 2.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://php.net"&gt;Php 5.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://openimageio.org"&gt;OpenImageIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;... and too many things I just don't remember!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I decided to see how I could make that setup a bit more portable and easier to
deploy.&lt;/p&gt;
&lt;p&gt;That's where &lt;a class="reference external" href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; kicks in along
&lt;a class="reference external" href="http://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt;  and
&lt;a class="reference external" href="https://store.continuum.io/cshop/anaconda/"&gt;Anaconda&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The following guide assume that you have that you have &lt;em&gt;PyCharm&lt;/em&gt; installed and
are using &lt;em&gt;Mac Os X&lt;/em&gt;, although it should pretty much be platform agnostic.&lt;/p&gt;
&lt;div class="section" id="development-workspace-creation"&gt;
&lt;h2&gt;Development Workspace Creation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On your local filesystem, in your development workspace, create a
directory &lt;code&gt;colour-science&lt;/code&gt; and &lt;code&gt;cd&lt;/code&gt; into it:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_63eaa88a62aa4e8984aaf84e687fbff8-1"&gt;&lt;/a&gt;mkdir colour-science
&lt;a name="rest_code_63eaa88a62aa4e8984aaf84e687fbff8-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;colour-science
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Clone the &lt;a class="reference external" href="https://github.com/colour-science/colour-vagrant"&gt;colour-vagrant&lt;/a&gt;
repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_1c27c33bfc1f43fa87f444c117081926-1"&gt;&lt;/a&gt;git clone git://github.com/colour-science/colour-vagrant.git
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;You should now have a &lt;code&gt;colour-vagrant&lt;/code&gt; directory nested into the
&lt;code&gt;colour-science&lt;/code&gt; one.&lt;/p&gt;
&lt;p&gt;Let's open the &lt;code&gt;colour-vagrant&lt;/code&gt; directory into &lt;em&gt;PyCharm&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="vagrant-installation"&gt;
&lt;h2&gt;Vagrant Installation&lt;/h2&gt;
&lt;p&gt;We will loosely follow
&lt;a class="reference external" href="http://www.jetbrains.com/pycharm/quickstart/configuring_for_vm.html"&gt;Jetbrain's PyCharm Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;a class="reference external" href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;a class="reference external" href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;a class="reference external" href="http://www.fabfile.org/"&gt;Fabric&lt;/a&gt;, this is the provider needed for
the &lt;a class="reference external" href="https://github.com/colour-science/colour-vagrant"&gt;colour-vagrant&lt;/a&gt;
environment:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_4eb5fae3d2c346678999d4ad6cbea58f-1"&gt;&lt;/a&gt;pip install fabric
&lt;/pre&gt;&lt;p&gt;Initially, I was provisioning with &lt;a class="reference external" href="http://puppetlabs.com/"&gt;Puppet&lt;/a&gt;.
It was cumbersome to use, so I decided to go for &lt;a class="reference external" href="http://www.fabfile.org/"&gt;Fabric&lt;/a&gt;
and the &lt;a class="reference external" href="https://github.com/hlassiege/fabric-vagrant"&gt;fabric-vagrant&lt;/a&gt;
plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;a class="reference external" href="http://xquartz.macosforge.org/"&gt;XQuartz&lt;/a&gt;: This is the X11 display
server for &lt;em&gt;Mac Os X&lt;/em&gt;. The virtual machine will export the display to it
so that you can see the figures from &lt;a class="reference external" href="http://matplotlib.org/"&gt;Matplotlib&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;em&gt;VirtualBox&lt;/em&gt; directories syncing performance degrades quickly with large
number of files.&lt;/p&gt;
&lt;p&gt;As a result the directories syncing is done with &lt;em&gt;NFS&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You will however be asked for your &lt;em&gt;Mac Os X&lt;/em&gt; password at each virtual
machine spin up because &lt;em&gt;Vagrant&lt;/em&gt; needs to modify configuration files on
the &lt;em&gt;Mac Os X&lt;/em&gt; host.&lt;/p&gt;
&lt;p&gt;In order to avoid that and following the
&lt;a class="reference external" href="https://docs.vagrantup.com/v2/synced-folders/nfs.html"&gt;Vagrant Documentation&lt;/a&gt;,
you can edit your &lt;em&gt;Mac Os X&lt;/em&gt; &lt;code&gt;/etc/sudoers&lt;/code&gt; file and append the
following content:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Cmnd_Alias VAGRANT_EXPORTS_ADD = /usr/bin/tee -a /etc/exports
Cmnd_Alias VAGRANT_NFSD = /sbin/nfsd restart
Cmnd_Alias VAGRANT_EXPORTS_REMOVE = /usr/bin/sed -E -e /*/ d -ibak /etc/exports
%admin ALL=(root) NOPASSWD: VAGRANT_EXPORTS_ADD, VAGRANT_NFSD, VAGRANT_EXPORTS_REMOVE
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pycharm-vagrant-configuration"&gt;
&lt;h2&gt;PyCharm Vagrant Configuration&lt;/h2&gt;
&lt;p&gt;The canonical way is to use &lt;em&gt;Vagrant&lt;/em&gt; from the command line as described in
&lt;a class="reference external" href="https://docs.vagrantup.com/v2/getting-started/"&gt;Vagrant Documentation&lt;/a&gt;, but
here we will leverage the &lt;em&gt;PyCharm&lt;/em&gt; integration.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Set the &lt;code&gt;Instance Folder&lt;/code&gt; field to your &lt;code&gt;colour-vagrant&lt;/code&gt;
directory.&lt;/li&gt;
&lt;li&gt;Add a new &lt;a class="reference external" href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; box to
&lt;a class="reference external" href="http://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; in the &lt;code&gt;Boxes&lt;/code&gt; tab
and use the following image:
&lt;a class="reference external" href="http://files.vagrantup.com/precise64.box"&gt;http://files.vagrantup.com/precise64.box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add the &lt;a class="reference external" href="https://github.com/hlassiege/fabric-vagrant"&gt;fabric-vagrant&lt;/a&gt;
plugin to &lt;a class="reference external" href="http://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; in the
&lt;code&gt;Plugins&lt;/code&gt; tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your configuration screen should be approximately as follows:&lt;/p&gt;
&lt;img alt="/images/Blog_PyCharm_Vagrant_001.png" src="http://colour-science.org/images/Blog_PyCharm_Vagrant_001.png"&gt;
&lt;img alt="/images/Blog_PyCharm_Vagrant_002.png" src="http://colour-science.org/images/Blog_PyCharm_Vagrant_002.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="vagrant-up"&gt;
&lt;h2&gt;Vagrant Up&lt;/h2&gt;
&lt;p&gt;With everything setup, hit the &lt;code&gt;PyCharm ---&amp;gt; Tools ---&amp;gt; Vagrant ---&amp;gt; Up&lt;/code&gt;
menu item to spin up the virtual machine.&lt;/p&gt;
&lt;p&gt;You can go grab a coffee, the initial provisioning will take roughly
25-30 minutes.&lt;/p&gt;
&lt;p&gt;If the provisioning ended smoothly, you should have the following
elements available:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;colour&lt;/strong&gt;, &lt;strong&gt;colour-ipython&lt;/strong&gt; and &lt;strong&gt;colour-science.org&lt;/strong&gt; repositories
cloned into the &lt;code&gt;colour-science&lt;/code&gt; directory right next to the
&lt;code&gt;colour-vagrant&lt;/code&gt; one.&lt;/li&gt;
&lt;li&gt;Remote Python environments installed into the virtual machine at the
following location with all the dependencies needed:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-1"&gt;&lt;/a&gt;vagrant@precise64:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/vagrant/anaconda/envs/
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-2"&gt;&lt;/a&gt;vagrant@precise64:~/anaconda/envs&lt;span class="nv"&gt;$ &lt;/span&gt;ll
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-3"&gt;&lt;/a&gt;total 20
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-4"&gt;&lt;/a&gt;drwxrwxr-x  &lt;span class="m"&gt;5&lt;/span&gt; vagrant vagrant &lt;span class="m"&gt;4096&lt;/span&gt; Sep  &lt;span class="m"&gt;5&lt;/span&gt; 10:00 ./
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-5"&gt;&lt;/a&gt;drwxrwxr-x &lt;span class="m"&gt;14&lt;/span&gt; vagrant vagrant &lt;span class="m"&gt;4096&lt;/span&gt; Sep  &lt;span class="m"&gt;5&lt;/span&gt; 10:00 ../
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-6"&gt;&lt;/a&gt;drwxrwxr-x &lt;span class="m"&gt;12&lt;/span&gt; vagrant vagrant &lt;span class="m"&gt;4096&lt;/span&gt; Sep  &lt;span class="m"&gt;5&lt;/span&gt; 10:00 python2.7/
&lt;a name="rest_code_c8fe4f35cc0842908dc0e0a6800b6176-7"&gt;&lt;/a&gt;drwxrwxr-x &lt;span class="m"&gt;11&lt;/span&gt; vagrant vagrant &lt;span class="m"&gt;4096&lt;/span&gt; Sep  &lt;span class="m"&gt;5&lt;/span&gt; 09:58 python3.5/
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;strong&gt;colour-science.org&lt;/strong&gt; website served from the virtual machine at
the following address: &lt;a class="reference external" href="http://localhost:8080/"&gt;http://localhost:8080/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pycharm-environment-configuration"&gt;
&lt;h2&gt;PyCharm Environment Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Add the various remote Python interpreters to
&lt;a class="reference external" href="http://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; following the
quickstart guide: &lt;a class="reference external" href="http://www.jetbrains.com/pycharm/quickstart/configuring_interpreter.html"&gt;Remote interpreter via virtual box:
2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The remote Python interpreters paths are as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;/home/vagrant/anaconda/envs/python2.7/bin/python&lt;/li&gt;
&lt;li&gt;/home/vagrant/anaconda/envs/python3.5/bin/python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add the paths mappings from the &lt;em&gt;Mac Os X&lt;/em&gt; host to the virtual
machine in the &lt;code&gt;Defaults&lt;/code&gt; configurations, in my case the mappings
are as follows:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/Users/KelSolaar/Documents/Developement/colour-science&lt;/span&gt; = &lt;span class="pre"&gt;/colour-science&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your Run/Debug configuration screen should be approximately looking like that:&lt;/p&gt;
&lt;img alt="/images/Blog_PyCharm_Configurations_001.png" src="http://colour-science.org/images/Blog_PyCharm_Configurations_001.png"&gt;
&lt;img alt="/images/Blog_PyCharm_Configurations_002.png" src="http://colour-science.org/images/Blog_PyCharm_Configurations_002.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;div class="section" id="ssh-connection-display"&gt;
&lt;h3&gt;SSH Connection &amp;amp; Display&lt;/h3&gt;
&lt;p&gt;Accessing the virtual machine is done by using
&lt;code&gt;PyCharm ---&amp;gt; Tools Start SSH session...&lt;/code&gt; menu item.&lt;/p&gt;
&lt;p&gt;However if you want to be able to export the display and see the figures you
will have to manually &lt;code&gt;ssh&lt;/code&gt; into the virtual machine:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_53c40a7bcf694ed0a1f81b18a67de257-1"&gt;&lt;/a&gt;ssh -Y vagrant@192.168.32.64
&lt;/pre&gt;&lt;p&gt;Password is &lt;code&gt;vagrant&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will also need to add the virtual machine to the X11 hosts by issuing the
following command on the &lt;em&gt;Mac Os X&lt;/em&gt; host:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_9469e1da2c734eac913460d48cff16d4-1"&gt;&lt;/a&gt;xhost + 192.168.32.64
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ipython-notebooks"&gt;
&lt;h3&gt;IPython Notebooks&lt;/h3&gt;
&lt;p&gt;The &lt;a class="reference external" href="http://ipython.org/notebook.html"&gt;IPython Notebooks&lt;/a&gt; server is started
as follows:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_607773f1ab9f497ea139ce422e551180-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /colour-science/colour-ipython/notebooks
&lt;a name="rest_code_607773f1ab9f497ea139ce422e551180-2"&gt;&lt;/a&gt;ipython notebook --pylab&lt;span class="o"&gt;=&lt;/span&gt;inline --ip&lt;span class="o"&gt;=&lt;/span&gt;0.0.0.0
&lt;/pre&gt;&lt;p&gt;Then you can access it on the &lt;em&gt;Mac Os X&lt;/em&gt; host at the following url:
&lt;a class="reference external" href="http://localhost:8888/"&gt;http://localhost:8888/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="remote-python-environments-interpreters"&gt;
&lt;h3&gt;Remote Python Environments &amp;amp; Interpreters&lt;/h3&gt;
&lt;p&gt;You can activate the remote Python environments in the virtual machine by
issuing those commands:&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;python2.7&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_a8a7616e50f64332a335128e51f9c503-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source &lt;/span&gt;activate python2.7
&lt;/pre&gt;&lt;p&gt;For &lt;strong&gt;python3.5&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_0a9eb1c3d8a4435987ddbb87ecb1e838-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source &lt;/span&gt;activate python3.5
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>anaconda</category><category>fabric</category><category>pycharm</category><category>vagrant</category><guid>http://colour-science.org/posts/pycharm-vagrant-fabric-anaconda/</guid><pubDate>Sat, 06 Sep 2014 14:45:00 GMT</pubDate></item></channel></rss>